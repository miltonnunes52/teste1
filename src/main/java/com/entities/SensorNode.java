package com.entities;
// default package
// Generated 3/Mai/2014 21:44:14 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SensorNode generated by hbm2java
 */
@Entity
@Table(name = "sensor_node", catalog = "camcof")
public class SensorNode implements java.io.Serializable {

	private Integer idSensorNode;
	private Sensor sensor;
	private String description;
	private String address;
	private Set<SensingData> sensingDatas = new HashSet<SensingData>(0);

	public SensorNode() {
	}

	public SensorNode(Sensor sensor) {
		this.sensor = sensor;
	}

	public SensorNode(Sensor sensor, String description, String address,
			Set<SensingData> sensingDatas) {
		this.sensor = sensor;
		this.description = description;
		this.address = address;
		this.sensingDatas = sensingDatas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idSensor_node", unique = true, nullable = false)
	public Integer getIdSensorNode() {
		return this.idSensorNode;
	}

	public void setIdSensorNode(Integer idSensorNode) {
		this.idSensorNode = idSensorNode;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Sensor_idSensor", nullable = false)
	public Sensor getSensor() {
		return this.sensor;
	}

	public void setSensor(Sensor sensor) {
		this.sensor = sensor;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "address", length = 45)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sensorNode")
	public Set<SensingData> getSensingDatas() {
		return this.sensingDatas;
	}

	public void setSensingDatas(Set<SensingData> sensingDatas) {
		this.sensingDatas = sensingDatas;
	}

}
