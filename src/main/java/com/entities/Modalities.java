package com.entities;
// default package
// Generated 3/Mai/2014 21:44:14 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Modalities generated by hbm2java
 */
@Entity
@Table(name = "modalities", catalog = "camcof")
public class Modalities implements java.io.Serializable {

	private Integer idModalities;
	private String description;
	private Set<ClassificationTags> classificationTagses = new HashSet<ClassificationTags>(
			0);
	private Set<Sensor> sensors = new HashSet<Sensor>(0);

	public Modalities() {
	}

	public Modalities(String description,
			Set<ClassificationTags> classificationTagses, Set<Sensor> sensors) {
		this.description = description;
		this.classificationTagses = classificationTagses;
		this.sensors = sensors;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idModalities", unique = true, nullable = false)
	public Integer getIdModalities() {
		return this.idModalities;
	}

	public void setIdModalities(Integer idModalities) {
		this.idModalities = idModalities;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modalities")
	public Set<ClassificationTags> getClassificationTagses() {
		return this.classificationTagses;
	}

	public void setClassificationTagses(
			Set<ClassificationTags> classificationTagses) {
		this.classificationTagses = classificationTagses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "modalities_has_sensor", catalog = "camcof", joinColumns = { @JoinColumn(name = "Modalities_idModalities", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Sensor_idSensor", nullable = false, updatable = false) })
	public Set<Sensor> getSensors() {
		return this.sensors;
	}

	public void setSensors(Set<Sensor> sensors) {
		this.sensors = sensors;
	}

}
