package com.entities;

// default package
// Generated 3/Mai/2014 21:44:14 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DataContext generated by hbm2java
 */
@Entity
@Table(name = "data_context", catalog = "camcof")
public class DataContext implements java.io.Serializable {

	private Integer idDataContext;
	private String description;
	private String tag;
	private Set<MidlevelInformation> midlevelInformations = new HashSet<MidlevelInformation>(
			0);
	private Set<SensingData> sensingDatas = new HashSet<SensingData>(0);
	private Set<Study> studies = new HashSet<Study>(0);
	private Set<HighlevelInformation> highlevelInformations = new HashSet<HighlevelInformation>(
			0);
	private Set<Tests> testses = new HashSet<Tests>(0);
	private Set<Real> reals = new HashSet<Real>(0);

	public DataContext() {
	}

	public DataContext(String description, String tag,
			Set<MidlevelInformation> midlevelInformations,
			Set<SensingData> sensingDatas, Set<Study> studies,
			Set<HighlevelInformation> highlevelInformations,
			Set<Tests> testses, Set<Real> reals) {
		this.description = description;
		this.tag = tag;
		this.midlevelInformations = midlevelInformations;
		this.sensingDatas = sensingDatas;
		this.studies = studies;
		this.highlevelInformations = highlevelInformations;
		this.testses = testses;
		this.reals = reals;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idData_context", unique = true, nullable = false)
	public Integer getIdDataContext() {
		return this.idDataContext;
	}

	public void setIdDataContext(Integer idDataContext) {
		this.idDataContext = idDataContext;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "tag", length = 45)
	public String getTag() {
		return this.tag;
	}

	public void setTag(String tag) {
		this.tag = tag;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataContext")
	public Set<MidlevelInformation> getMidlevelInformations() {
		return this.midlevelInformations;
	}

	public void setMidlevelInformations(
			Set<MidlevelInformation> midlevelInformations) {
		this.midlevelInformations = midlevelInformations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataContext")
	public Set<SensingData> getSensingDatas() {
		return this.sensingDatas;
	}

	public void setSensingDatas(Set<SensingData> sensingDatas) {
		this.sensingDatas = sensingDatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataContext")
	public Set<Study> getStudies() {
		return this.studies;
	}

	public void setStudies(Set<Study> studies) {
		this.studies = studies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataContext")
	public Set<HighlevelInformation> getHighlevelInformations() {
		return this.highlevelInformations;
	}

	public void setHighlevelInformations(
			Set<HighlevelInformation> highlevelInformations) {
		this.highlevelInformations = highlevelInformations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataContext")
	public Set<Tests> getTestses() {
		return this.testses;
	}

	public void setTestses(Set<Tests> testses) {
		this.testses = testses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataContext")
	public Set<Real> getReals() {
		return this.reals;
	}

	public void setReals(Set<Real> reals) {
		this.reals = reals;
	}

}
