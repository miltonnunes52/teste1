package com.entities;

// default package
// Generated 3/Mai/2014 21:44:14 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ClassificationTags generated by hbm2java
 */
@Entity
@Table(name = "classification_tags", catalog = "camcof")
public class ClassificationTags implements java.io.Serializable {

	private Integer idClassificationTags;
	private Modalities modalities;
	private String description;
	private String symbol;
	private Set<SensingData> sensingDatas = new HashSet<SensingData>(0);

	public ClassificationTags() {
	}

	public ClassificationTags(Modalities modalities) {
		this.modalities = modalities;
	}

	public ClassificationTags(Modalities modalities, String description,
			String symbol, Set<SensingData> sensingDatas) {
		this.modalities = modalities;
		this.description = description;
		this.symbol = symbol;
		this.sensingDatas = sensingDatas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idClassification_tags", unique = true, nullable = false)
	public Integer getIdClassificationTags() {
		return this.idClassificationTags;
	}

	public void setIdClassificationTags(Integer idClassificationTags) {
		this.idClassificationTags = idClassificationTags;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Modalities_idModalities", nullable = false)
	public Modalities getModalities() {
		return this.modalities;
	}

	public void setModalities(Modalities modalities) {
		this.modalities = modalities;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "symbol", length = 45)
	public String getSymbol() {
		return this.symbol;
	}

	public void setSymbol(String symbol) {
		this.symbol = symbol;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classificationTags")
	public Set<SensingData> getSensingDatas() {
		return this.sensingDatas;
	}

	public void setSensingDatas(Set<SensingData> sensingDatas) {
		this.sensingDatas = sensingDatas;
	}

}
